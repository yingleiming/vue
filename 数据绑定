
Vue.js数据绑定
    1.插入值
    2.绑定表达式
    3.指令
    4.缩写

    1.1 插入值
        1.1 文本
            数据绑定最基础的形式是文本插值，使用"Mustache"语法(双花括号)：
            <span>Message:{{message}}</span>
            Mustache标签会被相应数据对象的msg属性的值替换。每当这个属性变化时它也会更新。
            问题：当然，我们也可以只处理单次插值，今后的数据变化就不会再引起插值更新了
            解决办法：
            <span>this will never change:{{*msg}}</span>
        1.1.2 原始的HTML 使用v-html
            <div id="app" v-html="message">
                <span>{{ message }}</span>
            </div>
            <script src="vue.js"></script>

            <script>
                new Vue({
                    el:"#app",
                    data:{
                        message:'this is a <b style="color: red;">rainy</b> day'

                    }
                });
            </script>



    2.绑定表达式
        Vue.js在数据绑定内支持全功能的JavaScript表达式：
            {{ number +1 }}
            {{ ok ? 'YES' : 'NO' }}
            {{ message.split('').reverse().join('') }}
        表达式将在所属的Vue实例的作用域内计算。每个绑定只能包含单个表达式。
        < !--这是一个语句，不是一个表达式： -- >
        {{ var a = 1 }}

        < !-- 流程控制语句也不可以，可改用三元表达式 -- >
        {{ if(ok){return message} }}

    3.指令
        指令Directives 是特殊的带有前缀v-的特性
        <p v-if="greeting"> HELLO! </p>
        指令的参数
            有些指令可以在其名称后面带一个“参数”，中间放一份冒号隔开;
            <a v-bind:href="url"></a>
            <a v-on:click="doSomething"></a>
        指令的修饰符
            修饰符 modifiers 是以半角句号开始的特殊后缀，用于表示指令应当以特殊方式绑定
            <a v-bind:href.literal="a/b/c"></a>
            修饰符必须放在参数后面
    4.缩写
        Vue.js为两个最常用的指令v-bind 和 v-on 提供特别的缩写。vue中只此两种
         < !--完整语法 -- >
         <a v-bind:href="Url"></a>
         < !--缩写 -- >
         <a :href="Url"></a>

          < !--完整语法 -- >
          <a v-on:click="doSomething"></a>
          < !--缩写 -- >
          <a @click="doSomething"></a>





