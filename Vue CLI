Vue CLI 是vue 的脚手架工具，能够帮助我们快速构建一个vue项目。

开发一个小型项目或者创建一个Demo 只需手动创建并引入所需的文件就可以了。但是在真实的项目开发中，尤其是大型项目，我们往往需要用到很多的开发工具，这些工具能够帮助我们进行更加高效的开发。

开发过程中的工具一般包括：
1,开发服务器：如果直接打开我们手动创建的项目，在浏览器中预览的话是这个样子的：file:///E:/GITHUB/vue/demo.html 这是表示文件是在本地打开的，并不是在服务器中打开的。而在真实项目中，应该是这样的：https://www.github.com/ 。实现这种能够在互联网上通过http协议或者https协议就能访问网页的功能，就需要把项目搭建在服务器上了。
2，Babel，这个工具可以将es6语法转换成es5语法。Vue开发过程中会使用到es6语法。在项目开发完成后，我们需要将项目中的es6语法转换成es5语法，再放到服务器上。因为es6语法是2015年6月才发布的，也就是说15年之前的浏览器是不能打开es6开发的项目的。使用Babel将es6转换成es5语法之后，不管是15年之前的浏览器还是15年之后的浏览器都是可以访问我们的项目的。
3，Postcss less sass,postcss是后处理器，less sass 是预处理器。增加了变量语法等，是css的增强版。
4，esLint 代码规范，规范代码。多人开发，共同按照这个规范编写代码，如果不按照此规范编写代码会报错，不是代码错误，是格式错误。这样增加了代码的可维护性。

在实际项目中，可以单独的一个一个引入这些开发工具，并进行配置。但是耗时、费力，安装易出错。这时我们可以使用前端自动化工具，现在比较有名的如webpack、gulp。通过npm方式，将上面的开发工具配置到我们的项目中。但是使用webpack的前提是你需要懂得如何使用webpack以及如何利用webpack进行配置。而Vue CLI的作用就是帮助你处理这些工作的，使用一个命令就可以配置好你需要使用的项目开发工具以及要使用的插件。

使用Vue CLI 实现是要在电脑中安装 Vue CLI。安装Vue CLI之前，电脑需先安装有node并且node的版本要大于8.9。然后使用命令行：npm install -g @vue/cli使用vue --version检查是否安装成功。

使用vue cli创建一个项目: 进入想要创建项目的位置目录，使用命令行：vue create progrem-name 创建。注意 项目名不能使用驼峰命名法，会报错。

启动项目，进入新创建的项目目录，使用命令：npm run dev，获得启动项目的地址，如https://localhost:8080.

项目文件目录详解：
 
package.json ：当前项目的说明书。
 
里面包含项目的名字name、项目的版本号version，里面还包含的一个脚本scripts,比如使用npm run sever 实际执行的就是 vue-cli-service，就是去开起一个服务器。Build是将当前的代码进行打包压缩，lint是检查当前的代码是否存在某些问题。
Dependdencies:运行时的依赖
devDependencies:开发时的依赖。
  放项目所有引用包的地方，向babel eslint 都需要去下载，下载的东西就放在这个文件夹中。
  放置html的地方。
 正式编写代码的地方，它的入口文件是main.js
 剩下的这些都是配置文件了。
  浏览器的配置文件，要求当前的浏览器市场份额大于1%，是最近的浏览器版本，不是ie小于8的浏览器版本。告诉babel postcss对哪些的浏览器兼容性进行处理。
  代码规范的配置项。
  当我们想把项目放到git上进行托管时，我们可能需要忽略一些文件夹，比如node_modules。
.....
如果我们想修改某些配置的话，我们可以在相对应的配置文件中进行修改。但是这样修改很麻烦，嘻嘻，vue cli为我们提供了一个图形化的界面用来修改这些配置。
使用vue图形化界面，需要先启动，启动方式为命令行： vue ui

 
 
